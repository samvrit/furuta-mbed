//#############################################################################
// \file f2837x/F2837x_internal_testcases/CLA/asin/asin.cla
//
// \brief  Arc Sine Example
// \author Vishal Coelho
// \date   Apr 8, 2013
//
//
//  Group:             C2000
//  Target Family:    F2837xD
//
//#############################################################################
// $TI Release: F2837xD Support Library v3.09.00.00 $
// $Release Date: Thu Mar 19 07:35:24 IST 2020 $
// $Copyright:
// Copyright (C) 2013-2020 Texas Instruments Incorporated - http://www.ti.com/
//
// Redistribution and use in source and binary forms, with or without 
// modification, are permitted provided that the following conditions 
// are met:
// 
//   Redistributions of source code must retain the above copyright 
//   notice, this list of conditions and the following disclaimer.
// 
//   Redistributions in binary form must reproduce the above copyright
//   notice, this list of conditions and the following disclaimer in the 
//   documentation and/or other materials provided with the   
//   distribution.
// 
//   Neither the name of Texas Instruments Incorporated nor the names of
//   its contributors may be used to endorse or promote products derived
//   from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
// $
//#############################################################################

//
// Included Files
//
#include <cla_shared.h>

//
// Defines
//

//
// Globals
//
// Note that the globals defined in the .cla source are global to the cla source
// file.  i.e. they may be shared across tasks. All of the data shared between
// the CLA and the C28x CPU must be defined in the C (or C++) code, and not the
// CLA code.  
//

//
// Function Definitions
//
//Task 1 : Calculate duty cycle
__interrupt void Cla1Task1 ( void )
{
    float torqueFeedback, error, dutyCycle, voltage;
    uint16_t newCMPA;

    torqueFeedback = MOTOR_CONSTANT_KT * claInputs.currentAmperes;
    error = ABS(claInputs.torqueCommand) - torqueFeedback;
    errorIntegral += error;

    voltage = (KP * error) + (KI * errorIntegral);
    voltage = SATURATE(voltage, 0.0F, MOTOR_SUPPLY_VOLTAGE);

    dutyCycle = (voltage / MOTOR_SUPPLY_VOLTAGE) * EPWM1_TIMER_TBPRD;

    newCMPA = EPWM1_TIMER_TBPRD - (uint16_t)(dutyCycle / 2.0F);     // counter is symmetric, so divide duty cycle by 2 to get CMPA value

    claOutputs.direction = claInputs.torqueCommand < 0.0 ? 0 : 1;
    claOutputs.CMPA = newCMPA;
}

//
// End of file
//
